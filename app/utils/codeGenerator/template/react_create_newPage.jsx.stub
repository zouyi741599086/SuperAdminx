<?php
    /**
     * 新增页面，新页面的时候
    **/
    use app\utils\codeGenerator\CodeGenerator;
    use app\common\model\AdminMenuModel;

    $data = CodeGenerator::getCodeGeneratorInfo($table_name);

    // 引入api的文件名称
    $apiFileName = CodeGenerator::toCamelCase($table_name);
    $apiFileName = strtolower($apiFileName[0]) . substr($apiFileName, 1);

    // 列表权限节点
    $getListAuthName = CodeGenerator::toCamelCase($table_name, true);
    $menu = AdminMenuModel::where('name', $getListAuthName)->find();

    // 是否是多tab标签的form
    $isCardTab = false;
    if ($open_type == 2) {
        if (isset($card_tab_list) && is_array($card_tab_list) && count($card_tab_list) > 0) {
            $isCardTab = true;
        }
    }
?>
import { useRef, lazy } from 'react';
import { PageContainer, ProForm} from '@ant-design/pro-components';
import { <?php echo $apiFileName;?>Api } from '@/api/<?php echo $apiFileName;?>';
import { App, Card, <?php echo $row_columns_number == 1 ? 'Space, Row, Col, ' : ''?>} from 'antd';
import { useNavigate } from "react-router-dom";
import Lazyload from '@/component/lazyLoad/index';

<?php
    $card_tab_list_count = 1;
    if ($isCardTab) {
        $card_tab_list_count = count($card_tab_list);
    }
    for ($i = 1; $i <= $card_tab_list_count; $i++) {
echo "const Form{$i} = lazy(() => import('./../component/form{$i}'));\n";
    }
?>

/**
 * <?php echo $table_title ?? '';?> 新增
 *
 * @author zy <741599086@qq.com>
 * @link https://www.superadminx.com/
 * */
export default () => {
    const formRef = useRef();
    const navigate = useNavigate();
    const { message } = App.useApp();

    // 返回上一页
    const onBack = () => {
        navigate('<?php echo $menu['path'] ?? '';?>');
    }
    <?php
        if ($isCardTab) {
                echo "
    ////////////////////顶部切换//////////////////////
    const [topListKey, setTopListKey] = useState('1');
    const [topList] = useState([";
        
        foreach ($card_tab_list as $k => $v) {
            echo "
        {
            key: '".($k+1)."',
            label: '{$v}',
        },";
        }

    echo "
    ]);
    ";
        }
    ?>

    return <>
        <PageContainer
            className="sa-page-container"
            ghost
            header={{
                title: '添加<?php echo $table_title ?? '';?>',
                style: { padding: '0px 24px 12px' },
                onBack: onBack
            }}
        >
            <Card 
				styles={{
					body: {paddingBottom: 40}
				}}
                bordered={false}
<?php
                if ($isCardTab) {
echo "                tabList={topList}
                activeTabKey={topListKey}
                onTabChange={setTopListKey}
";
                }
                ?>
            >
                <ProForm
                    formRef={formRef}
                    layout="<?php echo $row_columns_number == 1 ? 'horizontal' : 'vertical'; ?>"
                    <?php if ($row_columns_number == 1) {?>
labelCol={{
                        span: 4,
                    }}
                    wrapperCol={{
                        span: 14,
                    }}
                    submitter={{
                        render: (props, doms) => {
                            return (
                                <Row>
                                    <Col span={14} offset={4}>
                                        <Space>{doms}</Space>
                                    </Col>
                                </Row>
                            )
                        },
                    }}
                    <?php }?>
// 可以回车提交
                    isKeyPressSubmit={true}
                    // 不干掉null跟undefined 的数据
                    omitNil={false}
                    onFinish={async (values) => {
                        const result = await <?php echo $apiFileName;?>Api.create(values);
                        if (result.code === 1) {
                            message.success(result.message)
                            onBack();
                            return true;
                        } else {
                            message.error(result.message)
                        }
                    }}
                    <?php
                        if ($isCardTab) {
                     echo "onFinishFailed={({ errorFields }) => {
                        // form验证失败的时候，用来自动切换顶部";
                        
                        foreach ($card_tab_list as $k => $v) {
                            $tmpFields = '';
                            if (isset($form_fields_type_config)) {
                                foreach ($form_fields_type_config as $field => $config) {
                                    if (isset($config['field_to_tab']) && $config['field_to_tab'] == $k + 1) {
                                        $tmpFields .= "'{$field}', ";
                                    }
                                }
                            }
                            $tmpFields = rtrim($tmpFields, ", ");

                            echo "
                        if ([{$tmpFields}].includes(errorFields[0].name[0])) {
                            return setTopListKey('".($k+1)."')
                        }";
                        }
                        
                    echo "}}
";
                        }?>
                >
                    <?php
                        if (!$isCardTab) {
                            echo "
                    <Lazyload>
                        <Form1 typeAction=\"create\" />
                    </Lazyload>
";
                        }

                        if ($isCardTab) {
                            for ($i = 1; $i <= $card_tab_list_count; $i++) {
                                echo "
                    <div style={{ display: topListKey === '{$i}' ? 'block' : 'none' }}>
                        <Lazyload>
                            <Form{$i} typeAction=\"create\" />
                        </Lazyload>
                    </div>
";
                            }
                        }
                    ?>
                </ProForm>
            </Card>
        </PageContainer>
    </>
}
