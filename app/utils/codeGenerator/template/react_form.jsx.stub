<?php
/**
 *  生成后端添加 修改页面form里面的字段组件
 */
    use app\utils\codeGenerator\CodeGenerator;
    $data = CodeGenerator::getCodeGeneratorInfo($table_name);

    

    // 异步搜索选择某个表的id 需要导入的组件
    $selectComponents = [];

    // 所有的字段的类型
    $filedsTypeArr = [];
    if(isset($form_fileds_type)) {
        foreach ($form_fileds_type as $k => $v) {
            if (!in_array($v,$filedsTypeArr)) {
                $filedsTypeArr[] = $v;
            }

            // 如果有异步搜索选择某个表的id的字段，则把表转为驼峰当组件的名称
            if ($v == 'SelectTable') {
                $tmp = CodeGenerator::toCamelCase($form_fields_type_config[$k]['dataSourceTable']);
                $form_fields_type_config[$k]['select_component_name'] = $tmp;
                if (! in_array($tmp, $selectComponents)) {
                    $selectComponents[] = $tmp;
                }
            }
        }
    }

    // 所有需要引入的api请求
    $apiFileArr = [];
    if (isset($form_fields_type_config)) {
        foreach ($form_fields_type_config as $k => $v) {
            if (isset($v['dataSourceTable']) && $v['dataSourceTable'] && $form_fileds_type[$k] !== 'SelectTable') {
                $tmpApiFileName = CodeGenerator::toCamelCase($v['dataSourceTable']);
                $tmpApiFileName = strtolower($tmpApiFileName[0]) . substr($tmpApiFileName, 1);
                if (!in_array($tmpApiFileName, $apiFileArr)) {
                    $apiFileArr[] = $tmpApiFileName;
                }
                
                $form_fields_type_config[$k]['dataSourceApi'] = $tmpApiFileName; // 字段配置里面存一份下面好用
            }
            // 判断字段规则里面是否有关联的字段
            if (isset($v['dependencyField']) && $v['dependencyField']) {
                $filedsTypeArr[] = 'ProFormDependency';
            }
        }
    }
?>
import { lazy } from 'react';
<?php
    foreach ($apiFileArr as $v) {
        echo "import { {$v}Api } from '@/api/{$v}';\n";
    }
?>
import { ProForm, <?php
        // 导入需要使用的字段
        if (in_array('Text',$filedsTypeArr) || in_array('Password',$filedsTypeArr)) {
            echo 'ProFormText, ';
        }
        echo in_array('TextArea',$filedsTypeArr) ? 'ProFormTextArea, ' : '';
        echo in_array('Digit',$filedsTypeArr) ? 'ProFormDigit, ' : '';
        echo in_array('DigitRange',$filedsTypeArr) ? 'ProFormDigitRange, ' : '';
        echo in_array('DatePicker',$filedsTypeArr) ? 'ProFormDatePicker, ' : '';
        echo in_array('DateTimePicker',$filedsTypeArr) ? 'ProFormDateTimePicker, ' : '';
        echo in_array('DateRangePicker',$filedsTypeArr) ? 'ProFormDateRangePicker, ' : '';
        echo in_array('DateTimeRangePicker',$filedsTypeArr) ? 'ProFormDateTimeRangePicker, ' : '';
        echo in_array('TimePicker',$filedsTypeArr) ? 'ProFormTimePicker, ' : '';
        if (in_array('TimePicker',$filedsTypeArr) || in_array('TimePickerRange',$filedsTypeArr)) {
            echo 'ProFormTimePicker, ';
        }
        echo in_array('Select',$filedsTypeArr) ? 'ProFormSelect, ' : '';
        echo in_array('TreeSelect',$filedsTypeArr) ? 'ProFormTreeSelect, ' : '';
        echo in_array('Checkbox',$filedsTypeArr) ? 'ProFormCheckbox, ' : '';
        echo in_array('Radio',$filedsTypeArr) ? 'ProFormRadio, ' : '';
        echo in_array('Cascader',$filedsTypeArr) ? 'ProFormCascader, ' : '';
        echo in_array('Switch',$filedsTypeArr) ? 'ProFormSwitch, ' : '';
        echo in_array('ProFormDependency',$filedsTypeArr) ? 'ProFormDependency, ' : '';
    ?>
} from '@ant-design/pro-components';
import { Row, Col } from 'antd';
import { arrayToTree } from '@/common/function';
<?php
// 导入需要使用的自定义的字段
if (in_array('province',$filedsTypeArr)) echo "import Province from '@/component/form/province/index';\n" ;
if (in_array('provinceCity',$filedsTypeArr)) echo "import ProvinceCity from '@/component/form/provinceCity/index';\n";
if (in_array('provinceCityArea',$filedsTypeArr)) echo "import ProvinceCityArea from '@/component/form/provinceCityArea/index';\n";
if (in_array('teditor',$filedsTypeArr)) echo "import Teditor from '@/component/form/teditor/index';\n";
if (in_array('tencentMap',$filedsTypeArr)) echo "import TencentMap from '@/component/form/tencentMap/index';\n";
if (in_array('uploadFile',$filedsTypeArr)) echo "import UploadFile from '@/component/form/uploadFile/index';\n";
if (in_array('uploadFileAll',$filedsTypeArr)) echo "import UploadFileAll from '@/component/form/uploadFileAll/index';\n";
if (in_array('uploadImg',$filedsTypeArr)) echo "import UploadImg from '@/component/form/uploadImg/index';\n";
if (in_array('uploadImgAll',$filedsTypeArr)) echo "import UploadImgAll from '@/component/form/uploadImgAll/index';\n";
if (in_array('uploadImgVideoAll',$filedsTypeArr)) echo "import UploadImgVideoAll from '@/component/form/uploadImgVideoAll/index';\n";
if (in_array('tagArr',$filedsTypeArr)) echo "const TagArrfrom '@/component/form/tagArr/index';\n";
if (in_array('imgTitle',$filedsTypeArr)) echo "const ImgTitle from '@/component/form/imgTitle/index';\n";
?>
<?php
// 导入需要使用的异步搜索选择组件
foreach ($selectComponents as $v) {
echo "import Select{$v} from '@/components/select{$v}';\n";
}
?>

/**
 * <?php echo $table_title ?? '';?> 添加修改的form字段
 * 
 * @param {string} typeAction create》添加，update》修改
 * @author zy <741599086@qq.com>
 * @link https://www.superadminx.com/
 * */
export default ({typeAction, ...props}) => {

    return <>
        <Row gutter={[24, 0]}>
        <?php
        if(isset($form_fileds_type)) {
            
            foreach ($form_fileds_type as $field => $type) {
                // 字段的中文名称
                $tmp_field_title = (isset($field_title[$field]) && $field_title[$field] != '') ? $field_title[$field] : $field;
                // 字段的配置
                $field_config = $form_fields_type_config[$field] ?? [];
                $field_config['extra'] = $field_config['extra'] ?? '';
                // 字段的props 前缀 后缀
                $fieldProps = [];
                if (isset($field_config['addonBefore']) && $field_config['addonBefore']) {
                    $fieldProps[] = "addonBefore: '{$field_config['addonBefore']}',";
                }
                if (isset($field_config['addonAfter']) && $field_config['addonAfter']) {
                    $fieldProps[] = "addonAfter: '{$field_config['addonAfter']}',";
                }
                // 提示语是请输入还是请选择还是请上传
                $filedTip = '请输入';
                if (in_array($type, ['DatePicker', 'DateTimePicker', 'DateRangePicker', 'DateTimeRangePicker', 'TimePicker', 'TimePickerRange', 'Select', 'TreeSelect', 'SelectTable', 'Checkbox', 'Radio', 'Cascader', 'Switch', 'province', 'provinceCity', 'provinceCityArea', 'tencentMap'])) {
                    $filedTip = '请选择';
                }
                if (in_array($type, ['uploadFile', 'uploadFileAll', 'uploadImg', 'uploadImgAll', 'uploadImgVideoAll'])) {
                    $filedTip = '请输入';
                }
                // 字段的类型 string | number | array
                $fieldType = 'string';
                if ($type == 'Digit') {
                    $fieldType = 'number';
                }
                if (in_array($type, ['Checkbox','uploadFileAll','uploadImgAll','uploadImgVideoAll'])) {
                    $fieldType = 'array';
                }
                // 字段的验证规则
                $validata = [];
                if (in_array('required', $field_config['validateRules'] ?? [])) {
                    $validata[] = "{ required: true, message: '{$filedTip}' },";
                } else {
                    $validata[] = "//{ required: true, message: '{$filedTip}' },";
                }
                if (in_array('tel', $field_config['validateRules'] ?? [])) {
                    $validata[] = "{ pattern: /^1[3456789]\d{9}$/, message: '请输入正确的手机号' },";
                }
                if (in_array('url', $field_config['validateRules'] ?? [])) {
                    $validata[] = "{ type: 'url', message: '请输入正确的URL' },";
                }
                if (in_array('email', $field_config['validateRules'] ?? [])) {
                    $validata[] = "{ type: 'email', message: '请输入正确的邮箱' },";
                }
                if (in_array('min', $field_config['validateRules'] ?? [])) {
                    $validata[] = "{ type: '{$fieldType}', min: {$field_config['minNumber']}, message: '最小".($fieldType == 'number' ? '' : '长度')."为：{$field_config['minNumber']}' },";
                }
                if (in_array('max', $field_config['validateRules'] ?? [])) {
                    $validata[] = "{ type: '{$fieldType}', max: {$field_config['maxNumber']}, message: '最大".($fieldType == 'number' ? '' : '长度')."为：{$field_config['maxNumber']}' },";
                }
                if (in_array('len', $field_config['validateRules'] ?? [])) {
                    $validata[] = "{ type: '{$fieldType}', len: {$field_config['lenNumber']}, message: '最大".($fieldType == 'number' ? '' : '长度')."为：{$field_config['maxNumber']}' },";
                }

                // 每行的宽度
                if ($row_columns_number == 1) {
                    $starCol = "<Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>";
                }
                if ($row_columns_number == 2) {
                    $starCol = "<Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>";
                }
                if ($row_columns_number == 3) {
                    $starCol = "<Col xs={24} sm={24} md={12} lg={12} xl={8} xxl={8}>";
                }
                if ($row_columns_number == 4) {
                    $starCol = "<Col xs={24} sm={24} md={12} lg={12} xl={8} xxl={6}>";
                }
                if (in_array($type, ['tagArr', 'uploadImgVideoAll', 'uploadImgAll', 'uploadImg', 'uploadFileAll', 'uploadFile'])) {
                    $starCol = "<Col xs={24} sm={24} md={24} lg={24} xl={12} xxl={12}>";
                }
                if (in_array($type, ['imgTitle', 'teditor'])) {
                    $starCol = "<Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>";
                }
                $endCol = "</Col>";

                // 是否是关联字段
                if (isset($form_fields_type_config[$field]['dependencyField']) && $form_fields_type_config[$field]['dependencyField']) {
                    $dependencyField = $form_fields_type_config[$field]['dependencyField'];
                    $starCol = "
            <ProFormDependency name={['{$dependencyField}']}>
                {({ {$dependencyField} }) => {
                    if ( {$dependencyField} ) {
                        return {$starCol}";

                        $endCol = "            {$endCol}
                    }
                }}
            </ProFormDependency>";
                } 

                include __DIR__ . "/react_form_field.jsx.stub";
            }
        }
        ?>

        </Row>
    </>
}
