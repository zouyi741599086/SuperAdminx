<?php
/**
 * 详情 弹窗打开的时候
 */
    use app\utils\codeGenerator\CodeGenerator;
    use app\common\model\AdminMenuModel;

    $data = CodeGenerator::getCodeGeneratorInfo($table_name);

    // 引入api的文件名称
    $apiFileName = CodeGenerator::toCamelCase($table_name);
    $apiFileName = strtolower($apiFileName[0]) . substr($apiFileName, 1);

    // 所有的字段的类型
    $filedsTypeArr = [];
    if(isset($info_fields_type)) {
        foreach ($info_fields_type as $v) {
            if (!in_array($v,$filedsTypeArr)) {
                $filedsTypeArr[] = $v;
            }
        }
    }

?>
import { useRef, useState, useEffect, lazy } from 'react';
import {
  ModalForm,
} from '@ant-design/pro-components';
import { <?php echo $apiFileName;?>Api } from '@/api/<?php echo $apiFileName;?>';
import { App, Button, Input, Descriptions, Typography, Space } from 'antd';
import { useUpdateEffect } from 'ahooks';
import { authCheck } from '@/common/function';
<?php
// 导入需要使用的自定义的字段
if (in_array('preview_content',$filedsTypeArr)) echo "import PreviewContent from '@/component/preview/content/index';\n" ;
if (in_array('preview_images_videos',$filedsTypeArr)) echo "import PreviewImagesVideos from '@/component/preview/imagesVideos/index';\n";
if (in_array('preview_teditor',$filedsTypeArr)) echo "import PreviewTeditor from '@/component/preview/teditor/index';\n";
if (in_array('preview_video',$filedsTypeArr)) echo "import PreviewVideo from '@/component/preview/video/index';\n";
if (in_array('preview_pdf',$filedsTypeArr)) echo "import PreviewPdf from '@/component/preview/pdf/index';\n";
if (in_array('preview_word',$filedsTypeArr)) echo "import PreviewWord from '@/component/preview/word/index';\n";
?>

/**
 * <?php echo $table_title ?? '';?> 详情
 * 
 * @author zy <741599086@qq.com>
 * @link https://www.superadminx.com/
 * */
export default ({ infoId, setInfoId, ...props }) => {
    const formRef = useRef();
    const { message } = App.useApp();

    const [open, setOpen] = useState(false);
    const [data, setData] = useState({});

    useUpdateEffect(() => {
        if (infoId > 0) {
            setOpen(true);
            <?php echo $apiFileName;?>Api.findData({
                id: infoId
            }).then(res => {
                if (res.code === 1) {
                    setData(res.data);
                } else {
                    message.error(res.message)
                }
            })
        }
    }, [infoId])

    //////////描述列表的列
    const [descriptionsItems, setDescriptionsItems] = useState([]);
    useEffect(() => {
        setDescriptionsItems([
<?php
            if (isset($info_fields_type)) {
                foreach ($info_fields_type as $field => $type) {

                // 字段的中文名称
                $tmp_field_title = (isset($field_title[$field]) && $field_title[$field] != '') ? $field_title[$field] : $field;

                $children = "";
                // 文本
                if ($type == 'text') {
                    $children = "<Typography.Text>{data.{$field}}</Typography.Text>";
                }

                // 文本可展开
                if ($type == 'text_ellipsis') {
                    $children = "<Typography.Paragraph
                        ellipsis={{
                            rows: 1,
                            expandable: 'collapsible',
                        }}
                >{data.{$field}}</Typography.Paragraph>";
                }

                // 状态如订单状态
                if ($type == 'status') {
                    $children = "<>
                    {data.{$field} === 1 ? <>
                        <Typography.Text type=\"danger\">待付款</Typography.Text>
                    </> : ''}
                    {data.{$field} === 2 ? <>
                        <Typography.Text mark>待发货</Typography.Text>
                    </> : ''}
                    {data.{$field} === 3 ? <>
                        <Typography.Text type=\"success\">待收货</Typography.Text>
                    </> : ''}
                    {data.{$field} === 4 ? <>
                        <Typography.Text type=\"success\">待评价</Typography.Text>
                    </> : ''}
                    {data.{$field} === 5 ? <>
                        <Typography.Text>已完成</Typography.Text>
                    </> : ''}
                    {data.{$field} === 6 ? <>
                        <Typography.Text disabled>已关闭</Typography.Text>
                    </> : ''}
                    {data.{$field} === 7 ? <>
                        <Typography.Text mark>退款审核中</Typography.Text>
                    </> : ''}
                    {data.{$field} === 8 ? <>
                        <Typography.Text underline>已退款</Typography.Text>
                    </> : ''}
                </>";
                }

                // 文本可复制
                if ($type == 'text_copy') {
                    $children = "<Typography.Paragraph
                    copyable={{
                        text: data.{$field},
                    }}
                >{data.{$field}}</Typography.Paragraph>";
                }

                // 灰色文本
                if ($type == 'text_secondary') {
                    $children = "<Typography.Text type='secondary'>{data.{$field}}</Typography.Text>";
                }

                // 绿色文本
                if ($type == 'text_success') {
                    $children = "<Typography.Text type='success'>{data.{$field}}</Typography.Text>";
                }

                // 黄色文本
                if ($type == 'text_warning') {
                    $children = "<Typography.Text type='warning'>{data.{$field}}</Typography.Text>";
                }

                // 红色文本
                if ($type == 'text_danger') {
                    $children = "<Typography.Text type='danger'>{data.{$field}}</Typography.Text>";
                }

                // 加粗文本
                if ($type == 'text_strong') {
                    $children = "<Typography.Text strong={true}>{data.{$field}}</Typography.Text>";
                }

                // 黄色底文本
                if ($type == 'text_mark') {
                    $children = "<Typography.Text mark={true}>{data.{$field}}</Typography.Text>";
                }

                // 灰色底文本
                if ($type == 'text_code') {
                    $children = "<Typography.Text code={true}>{data.{$field}}</Typography.Text>";
                }

                // 弹窗查看文本
                if ($type == 'preview_content') {
                    $children = "<PreviewContent title=\"查看\" content={data.{$field}} type={1}/>";
                }

                // 预览多个图片或视频
                if ($type == 'preview_images_videos') {
                    $children = "<PreviewImagesVideos imgs={data.{$field}} />";
                }

                // 预览富文本内容
                if ($type == 'preview_teditor') {
                    $children = "<PreviewTeditor title=\"{$tmp_field_title}\" content={data.{$field}} />";
                }

                // 预览视频
                if ($type == 'preview_video') {
                    $children = "<PreviewVideo url={data.{$field}} />";
                }

                // preview_pdf
                if ($type == 'preview_pdf') {
                    $children = "<PreviewPdf title=\"{$tmp_field_title}\" url={data.{$field}} />";
                }

                // 预览word
                if ($type == 'preview_word') {
                    $children = "<PreviewWord title=\"{$tmp_field_title}\" url={data.{$field}} />";
                }
                

            echo "            {
                key: '{$field}',
                label: '{$tmp_field_title}',
                children: {$children},
            },
";

                }
            }
        ?>
        ]);
    }, [data]) 

    return <>
        <ModalForm
            name="<?php echo CodeGenerator::toCamelCase($table_name);?>Info"
            formRef={formRef}
            open={open}
            onOpenChange={(_boolean) => {
                setOpen(_boolean);
                // 关闭的时候干掉infoId，不然无法重复修改同一条数据
                if (_boolean === false) {
                setInfoId(0);
                }
            }}
            submitter={false}
            title="<?php echo $table_title ?? '';?>详情"
            width={<?php echo $row_columns_number == 1 ? 560 : $row_columns_number * 400;?>}
        >
            <Descriptions 
                size="small" 
                column={<?php echo $row_columns_number;?>} 
                bordered={true}
                items={descriptionsItems}
            />
        </ModalForm>
    </>;
};